name: "Infra: Release"
on:
  release:
    types: [ published ]

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      version: ${{steps.build.outputs.version}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ github.token }}

      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'

      - name: Build with Maven
        id: build
        run: |
          ./mvnw -B -ntp versions:set -DnewVersion=${{ github.event.release.tag_name }}
          ./mvnw -B -V -ntp clean package -Pprod -DskipTests
          export VERSION=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: api/target/api-${{ steps.build.outputs.version }}.jar
          tag: ${{ github.event.release.tag_name }}

      - name: Archive JAR
        uses: actions/upload-artifact@v4
        with:
          name: kafbat-ui-${{ steps.build.outputs.version }}
          path: api/target/api-${{ steps.build.outputs.version }}.jar

  docker-build:
    needs: release
    permissions:
      contents: read
    uses: ./.github/workflows/docker_build.yml
    secrets: inherit
    with:
      sha: ${{ github.sha }}
      version: ${{ needs.release.outputs.version }}

  docker-deploy:
    needs: [release, docker-build]
    permissions:
      packages: write
      id-token: write # Required to authenticate with OIDC for AWS
    uses: ./.github/workflows/docker_publish.yml
    secrets: inherit
    with:
      version: ${{ needs.release.outputs.version }}
      generic_tag: latest

  charts:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.CHARTS_ACTIONS_TOKEN }}
          repository: kafbat/helm-charts
          event-type: prepare-helm-release
          client-payload: '{"appversion": "${{ needs.release.outputs.version }}"}'
