name: "E2E: Run tests"

on:
  workflow_call:
    inputs:
      suite_name:
        description: 'Test suite name to run'
        default: 'regression'
        required: true
        type: string
      sha:
        required: true
        type: string

permissions:
  contents: read
  checks: write
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # infered from @v4
        with:
          token: ${{ github.token }}
          ref: ${{ inputs.sha }}

      - name: Set up JDK
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # infered from @v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Build with Gradle
        id: build_app
        run: |
          ./gradlew clean build \
          -x test \
          -Pbuild-docker-images=true \
          -Pinclude-frontend=true \
          -Pversion=latest

      - name: Upload build artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # infered from @v4
        with:
          name: artifacts
          path: |
            api/build/libs
            api/build/classes
            api/build/resources
          retention-days: 7

      - name: Dump docker image
        run: |
          docker image save ghcr.io/kafbat/kafka-ui:latest > /tmp/image.tar

      - name: Upload docker image
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # infered from @v4
        with:
          name: image
          path: /tmp/image.tar
          retention-days: 7

  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Checkout
        uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # infered from @v4
        with:
          token: ${{ github.token }}
          ref: ${{ inputs.sha }}

      - name: Set up JDK
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # infered from @v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Download build artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # infered from @v4
        with:
          name: artifacts
          path: api/build

      - name: Download docker image
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # infered from @v4
        with:
          name: image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar

      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@fb28c93772363301b8d0a6072ce850224b73f74e # infered from @v0.5.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('./e2e-tests/selenoid/selenoid-ci.yaml', './documentation/compose/e2e-tests.yaml') }}

      - name: Compose up
        id: compose_app
        # use the following command until #819 will be fixed # TODO recheck 819
        run: |
          mkdir -p /tmp/build/selenoid-results/{video,logs}
          docker compose -f ./e2e-tests/selenoid/selenoid-ci.yaml up -d
          docker compose -f ./documentation/compose/e2e-tests.yaml up -d

      - name: Dump Docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@2741064ab9d7af54b0b1ffb6076cf64c16f0220e # infered from @v2.2.2

      - name: Run test suite
        run: |
          ./gradlew :e2e-tests:test -Prun-e2e=true -Psuite_name=${{ inputs.suite_name }}

      - name: Upload allure reports artifact
        if: '!cancelled()'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # infered from @v4
        with:
          name: reports
          path: ./e2e-tests/build/allure-results
          retention-days: 7

      - name: Upload selenide results artifact
        if: failure()
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # infered from @v4
        with:
          name: selenide-results
          path: ./e2e-tests/build/selenide-results
          retention-days: 3

  reports:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ !cancelled() && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository) }}
    steps:
      - name: Download allure reports artifact
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # infered from @v4
        with:
          name: reports
          path: ./e2e-tests/build/allure-results

      - name: Generate Allure report
        uses: simple-elf/allure-report-action@58e6590adf6d8f196a0d771bf8a00e6921086a62 # infered from @v1.9
        id: allure-report
        with:
          allure_results: ./e2e-tests/build/allure-results
          gh_pages: allure-results
          allure_report: allure-report
          subfolder: allure-results
          report_url: "https://reports.kafbat.dev"

      - name: Upload allure report to R2
        uses: ryand56/r2-upload-action@b801a390acbdeb034c5e684ff5e1361c06639e7c # infered from @latest
        with:
          source-dir: allure-history/allure-results
          destination-dir: .
          r2-bucket: "reports"
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_ACCESS_SECRET_KEY }}

      - name: Add allure link status check
        uses: Sibz/github-status-action@650dd1a882a76dbbbc4576fb5974b8d22f29847f # infered from @v1.1.6
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: "E2E allure report / Click to view the report"
          state: "success"
          sha: ${{ inputs.sha }}
          target_url: https://reports.kafbat.dev/${{ github.run_number }}/index.html
