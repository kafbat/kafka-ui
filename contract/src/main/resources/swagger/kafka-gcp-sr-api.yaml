openapi: 3.0.0
info:
    description: Api Documentation
    version: 0.1.0
    title: Api Documentation
    termsOfService: urn:tos
    contact: {}
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0
tags:
    - name: /gcpschemaregistry
servers:
    - url: /localhost

paths:
    /subjects:
        get:
            tags:
              - KafkaGcpSrClient
            summary: get all connectors from Kafka Connect service
            operationId: getAllSubjectNames
            parameters:
              - name: subjectPrefix
                in: query
                required: false
                schema:
                  type: string
              - name: deleted
                in: query
                schema:
                  type: boolean
            responses:
                200:
                  description: OK
                  content:
                      application/json:
                          schema:
                            #workaround for https://github.com/spring-projects/spring-framework/issues/24734
                            type: string

    /subjects/{subject}:
        delete:
            tags:
                - KafkaGcpSrClient
            operationId: deleteAllSubjectVersions
            parameters:
                - name: subject
                  in: path
                  required: true
                  schema:
                    type: string
                - name: permanent
                  in: query
                  schema:
                    type: boolean
                  required: false
            responses:
                200:
                    description: OK
                404:
                    description: Not found

    /subjects/{subject}/versions/{version}:
        get:
            tags:
              - KafkaGcpSrClient
            operationId: getSubjectVersion
            parameters:
              - name: subject
                in: path
                required: true
                schema:
                  type: string
              - name: version
                in: path
                required: true
                schema:
                  type: string
              - name: deleted
                in: query
                schema:
                  type: boolean
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SchemaSubject'
                404:
                    description: Not found
                422:
                    description: Invalid version
        delete:
            tags:
                - KafkaGcpSrClient
            operationId: deleteSubjectVersion
            parameters:
                - name: subject
                  in: path
                  required: true
                  schema:
                    type: string
                - name: permanent
                  in: query
                  required: false
                  schema:
                    type: boolean
                    default: false
                - name: version
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                200:
                    description: OK
                404:
                    description: Not found

    /subjects/{subject}/versions:
        get:
            tags:
                - KafkaGcpSrClient
            operationId: getSubjectVersions
            parameters:
                - name: subject
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: integer
                                    format: int32
                404:
                    description: Not found
        post:
            tags:
                - KafkaGcpSrClient
            operationId: registerNewSchema
            parameters:
                - name: subject
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewSubject'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubjectId'

    /config:
        get:
            tags:
                - KafkaGcpSrClient
            operationId: getGlobalCompatibilityLevel
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompatibilityConfig'
                404:
                    description: Not found
        put:
            tags:
                - KafkaGcpSrClient
            operationId: updateGlobalCompatibilityLevel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompatibilityLevelChange'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompatibilityLevelChange'
                404:
                    description: Not found

    /config/{subject}:
        get:
            tags:
                - KafkaGcpSrClient
            operationId: getSubjectCompatibilityLevel
            parameters:
                - name: subject
                  in: path
                  required: true
                  schema:
                      type: string
                - name: defaultToGlobal
                  in: query
                  required: true
                  schema:
                      type: boolean
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompatibilityConfig'
                404:
                    description: Not found
        put:
            tags:
                - KafkaGcpSrClient
            operationId: updateSubjectCompatibilityLevel
            parameters:
                - name: subject
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompatibilityLevelChange'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompatibilityLevelChange'
                404:
                    description: Not found
        delete:
            tags:
                - KafkaGcpSrClient
            operationId: deleteSubjectCompatibilityLevel
            parameters:
                - name: subject
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: OK
                404:
                    description: Not found

    /compatibility/subjects/{subject}/versions/{version}:
        post:
            tags:
                - KafkaGcpSrClient
            operationId: checkSchemaCompatibility
            parameters:
                - name: subject
                  in: path
                  required: true
                  schema:
                      type: string
                - name: version
                  in: path
                  required: true
                  schema:
                      type: string
                - name: verbose
                  in: query
                  description: Show reason a schema fails the compatibility test
                  schema:
                      type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewSubject'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompatibilityCheckResponse'
                404:
                    description: Not found

security:
    - basicAuth: []

components:
    securitySchemes:
        basicAuth:
            type: http
            scheme: basic
    schemas:
        SchemaSubject:
            type: object
            properties:
              subject:
                type: string
              version:
                type: string
              id:
                type: integer
              schema:
                type: string
              schemaType:
                  $ref: '#/components/schemas/SchemaType'
              references:
                type: array
                items:
                  $ref: '#/components/schemas/SchemaReference'
            required:
              - id
              - subject
              - version
              - schema
              - schemaType

        SchemaType:
          type: string
          description: upon updating a schema, the type of an existing schema can't be changed
          enum:
            - AVRO
            - JSON
            - PROTOBUF

        SchemaReference:
            type: object
            properties:
                name:
                    type: string
                subject:
                    type: string
                version:
                    type: integer
            required:
                - name
                - subject
                - version

        SubjectId:
            type: object
            properties:
                id:
                    type: integer

        NewSubject:
            type: object
            description: should be set for creating/updating schema subject
            properties:
                schema:
                    type: string
                schemaType:
                    $ref: '#/components/schemas/SchemaType'
                references:
                    type: array
                    items:
                        $ref: '#/components/schemas/SchemaReference'
            required:
                - schema
                - schemaType

#        CompatibilityConfig:
#            type: object
#            properties:
#                compatibilityLevel:
#                    $ref: '#/components/schemas/Compatibility'
#            required:
#                - compatibilityLevel

        CompatibilityConfig:
            type: object
            properties:
                alias:
                  type: string
                compatibility:
                  $ref: '#/components/schemas/Compatibility'
                normalize:
                  type: boolean
            required:
                - compatibility

        CompatibilityLevelChange:
            type: object
            properties:
                compatibility:
                    $ref: '#/components/schemas/Compatibility'
            required:
                - compatibility

        Compatibility:
            type: string
            enum:
                - BACKWARD
                - BACKWARD_TRANSITIVE
                - FORWARD
                - FORWARD_TRANSITIVE
                - FULL
                - FULL_TRANSITIVE
                - NONE

        CompatibilityCheckResponse:
            type: object
            properties:
                is_compatible:
                    type: boolean
