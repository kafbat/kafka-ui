Subject: [PATCH] BE: Fixes #445 be connect info
---
Index: api/src/main/java/io/kafbat/ui/mapper/ClusterMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/src/main/java/io/kafbat/ui/mapper/ClusterMapper.java b/api/src/main/java/io/kafbat/ui/mapper/ClusterMapper.java
--- a/api/src/main/java/io/kafbat/ui/mapper/ClusterMapper.java	(revision 9ea69c7868652a04a7af949eff383ee09e8cc243)
+++ b/api/src/main/java/io/kafbat/ui/mapper/ClusterMapper.java	(revision abb46f1075df173e25157e5add12606ccbc7547e)
@@ -15,6 +15,10 @@
 import io.kafbat.ui.model.ConfigSourceDTO;
 import io.kafbat.ui.model.ConfigSynonymDTO;
 import io.kafbat.ui.model.ConnectDTO;
+import io.kafbat.ui.model.ConnectorDTO;
+import io.kafbat.ui.model.ConnectorStateDTO;
+import io.kafbat.ui.model.ConnectorStatusDTO;
+import io.kafbat.ui.model.ConnectorTaskStatusDTO;
 import io.kafbat.ui.model.InternalBroker;
 import io.kafbat.ui.model.InternalBrokerConfig;
 import io.kafbat.ui.model.InternalClusterState;
@@ -29,16 +33,19 @@
 import io.kafbat.ui.model.Metrics;
 import io.kafbat.ui.model.PartitionDTO;
 import io.kafbat.ui.model.ReplicaDTO;
+import io.kafbat.ui.model.TaskDTO;
 import io.kafbat.ui.model.TopicConfigDTO;
 import io.kafbat.ui.model.TopicDTO;
 import io.kafbat.ui.model.TopicDetailsDTO;
 import io.kafbat.ui.model.TopicProducerStateDTO;
+import io.kafbat.ui.model.connect.InternalConnectorInfo;
 import io.kafbat.ui.service.metrics.SummarizedMetrics;
 import io.prometheus.metrics.model.snapshots.Label;
 import io.prometheus.metrics.model.snapshots.MetricSnapshot;
 import java.math.BigDecimal;
 import java.util.List;
 import java.util.Map;
+import java.util.Optional;
 import java.util.stream.Stream;
 import org.apache.kafka.clients.admin.ConfigEntry;
 import org.apache.kafka.clients.admin.ProducerState;
@@ -118,7 +125,38 @@
 
   ReplicaDTO toReplica(InternalReplica replica);
 
-  ConnectDTO toKafkaConnect(ClustersProperties.ConnectCluster connect);
+  default ConnectDTO toKafkaConnect(ClustersProperties.ConnectCluster connect, List<InternalConnectorInfo> connectors) {
+    int connectorCount = connectors.size();
+    int failedConnectors = 0;
+    int tasksCount = 0;
+    int failedTasksCount = 0;
+
+    for (InternalConnectorInfo connector : connectors) {
+      Optional<ConnectorDTO> internalConnector = Optional.ofNullable(connector.getConnector());
+
+      failedConnectors += internalConnector
+          .map(ConnectorDTO::getStatus)
+          .map(ConnectorStatusDTO::getState)
+          .filter(ConnectorStateDTO.FAILED::equals)
+          .map(s -> 1).orElse(0);
+
+      tasksCount += internalConnector.map(c -> c.getTasks().size()).orElse(0);
+
+      for (TaskDTO task : connector.getTasks()) {
+        if (task.getStatus() != null && ConnectorTaskStatusDTO.FAILED.equals(task.getStatus().getState())) {
+          failedTasksCount += tasksCount;
+        }
+      }
+    }
+
+    return new ConnectDTO()
+        .address(connect.getAddress())
+        .name(connect.getName())
+        .connectorsCount(connectorCount)
+        .failedConnectorsCount(failedConnectors)
+        .tasksCount(tasksCount)
+        .failedTasksCount(failedTasksCount);
+  }
 
   List<ClusterDTO.FeaturesEnum> toFeaturesEnum(List<ClusterFeature> features);
 
Index: api/src/main/java/io/kafbat/ui/mapper/KafkaConnectMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/src/main/java/io/kafbat/ui/mapper/KafkaConnectMapper.java b/api/src/main/java/io/kafbat/ui/mapper/KafkaConnectMapper.java
--- a/api/src/main/java/io/kafbat/ui/mapper/KafkaConnectMapper.java	(revision 9ea69c7868652a04a7af949eff383ee09e8cc243)
+++ b/api/src/main/java/io/kafbat/ui/mapper/KafkaConnectMapper.java	(revision abb46f1075df173e25157e5add12606ccbc7547e)
@@ -11,7 +11,7 @@
 import io.kafbat.ui.model.FullConnectorInfoDTO;
 import io.kafbat.ui.model.TaskDTO;
 import io.kafbat.ui.model.TaskStatusDTO;
-import io.kafbat.ui.model.connect.InternalConnectInfo;
+import io.kafbat.ui.model.connect.InternalConnectorInfo;
 import java.util.List;
 import org.mapstruct.Mapper;
 import org.mapstruct.Mapping;
@@ -38,7 +38,7 @@
       io.kafbat.ui.connect.model.ConnectorPluginConfigValidationResponse
           connectorPluginConfigValidationResponse);
 
-  default FullConnectorInfoDTO fullConnectorInfo(InternalConnectInfo connectInfo) {
+  default FullConnectorInfoDTO fullConnectorInfo(InternalConnectorInfo connectInfo) {
     ConnectorDTO connector = connectInfo.getConnector();
     List<TaskDTO> tasks = connectInfo.getTasks();
     int failedTasksCount = (int) tasks.stream()
Index: api/src/main/java/io/kafbat/ui/model/connect/InternalConnectInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/src/main/java/io/kafbat/ui/model/connect/InternalConnectInfo.java b/api/src/main/java/io/kafbat/ui/model/connect/InternalConnectorInfo.java
rename from api/src/main/java/io/kafbat/ui/model/connect/InternalConnectInfo.java
rename to api/src/main/java/io/kafbat/ui/model/connect/InternalConnectorInfo.java
--- a/api/src/main/java/io/kafbat/ui/model/connect/InternalConnectInfo.java	(revision 9ea69c7868652a04a7af949eff383ee09e8cc243)
+++ b/api/src/main/java/io/kafbat/ui/model/connect/InternalConnectorInfo.java	(revision abb46f1075df173e25157e5add12606ccbc7547e)
@@ -9,7 +9,7 @@
 
 @Data
 @Builder(toBuilder = true)
-public class InternalConnectInfo {
+public class InternalConnectorInfo {
   private final ConnectorDTO connector;
   private final Map<String, Object> config;
   private final List<TaskDTO> tasks;
Index: api/src/main/java/io/kafbat/ui/service/KafkaConnectService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/src/main/java/io/kafbat/ui/service/KafkaConnectService.java b/api/src/main/java/io/kafbat/ui/service/KafkaConnectService.java
--- a/api/src/main/java/io/kafbat/ui/service/KafkaConnectService.java	(revision 9ea69c7868652a04a7af949eff383ee09e8cc243)
+++ b/api/src/main/java/io/kafbat/ui/service/KafkaConnectService.java	(revision abb46f1075df173e25157e5add12606ccbc7547e)
@@ -23,7 +23,8 @@
 import io.kafbat.ui.model.KafkaCluster;
 import io.kafbat.ui.model.NewConnectorDTO;
 import io.kafbat.ui.model.TaskDTO;
-import io.kafbat.ui.model.connect.InternalConnectInfo;
+import io.kafbat.ui.model.TaskStatusDTO;
+import io.kafbat.ui.model.connect.InternalConnectorInfo;
 import io.kafbat.ui.util.ReactiveFailover;
 import java.util.List;
 import java.util.Map;
@@ -33,7 +34,6 @@
 import javax.annotation.Nullable;
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.stereotype.Service;
 import org.springframework.web.reactive.function.client.WebClientResponseException;
 import reactor.core.publisher.Flux;
@@ -48,11 +48,24 @@
   private final KafkaConfigSanitizer kafkaConfigSanitizer;
 
   public Flux<ConnectDTO> getConnects(KafkaCluster cluster) {
-    return Flux.fromIterable(
-        Optional.ofNullable(cluster.getOriginalProperties().getKafkaConnect())
-            .map(lst -> lst.stream().map(clusterMapper::toKafkaConnect).toList())
-            .orElse(List.of())
-    );
+    return Optional.ofNullable(cluster.getOriginalProperties().getKafkaConnect())
+        .map(connects -> Flux.fromIterable(connects).flatMap(connect ->
+            getConnectorNamesWithErrorsSuppress(cluster, connect.getName()).flatMap(connectorName ->
+                Mono.zip(
+                    getConnector(cluster, connect.getName(), connectorName),
+                    getConnectorTasks(cluster, connect.getName(), connectorName).collectList()
+                ).map(tuple ->
+                    InternalConnectorInfo.builder()
+                        .connector(tuple.getT1())
+                        .config(null)
+                        .tasks(tuple.getT2())
+                        .topics(null)
+                        .build()
+                )
+            ).collectList().map(connectors ->
+                clusterMapper.toKafkaConnect(connect, connectors)
+            )
+        )).orElse(Flux.fromIterable(List.of()));
   }
 
   public Flux<FullConnectorInfoDTO> getAllConnectors(final KafkaCluster cluster,
@@ -67,7 +80,7 @@
                         getConnectorTasks(cluster, connect.getName(), connectorName).collectList(),
                         getConnectorTopics(cluster, connect.getName(), connectorName)
                     ).map(tuple ->
-                        InternalConnectInfo.builder()
+                        InternalConnectorInfo.builder()
                             .connector(tuple.getT1())
                             .config(tuple.getT2())
                             .tasks(tuple.getT3())
Index: contract/src/main/resources/swagger/kafbat-ui-api.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/contract/src/main/resources/swagger/kafbat-ui-api.yaml b/contract/src/main/resources/swagger/kafbat-ui-api.yaml
--- a/contract/src/main/resources/swagger/kafbat-ui-api.yaml	(revision 9ea69c7868652a04a7af949eff383ee09e8cc243)
+++ b/contract/src/main/resources/swagger/kafbat-ui-api.yaml	(revision abb46f1075df173e25157e5add12606ccbc7547e)
@@ -3494,6 +3494,14 @@
           type: string
         address:
           type: string
+        connectors_count:
+          type: integer
+        failed_connectors_count:
+          type: integer
+        tasks_count:
+          type: integer
+        failed_tasks_count:
+          type: integer
       required:
         - name
 
