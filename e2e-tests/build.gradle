import java.nio.file.Files
import java.nio.file.Paths

plugins {
    id 'java'
    id 'checkstyle'
    alias(libs.plugins.allure)
}

dependencies {
    implementation project(":contract")
    implementation libs.apache.kafka
    implementation libs.apache.commons.io
    implementation libs.aspectj
    implementation libs.testng
    implementation libs.codeborne.selenide
    implementation libs.allure.testng
    implementation libs.allure.selenide
    implementation libs.bonigarcia.webdrivermanager
    implementation libs.spring.starter.webflux
    implementation libs.netty.resolver.dns.native

    implementation libs.lombok

    annotationProcessor libs.lombok
    testAnnotationProcessor libs.lombok
}

checkstyle {
    toolVersion = libs.versions.checkstyle.get()
    configFile = rootProject.file('etc/checkstyle/checkstyle-e2e.xml')
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

test {
    doFirst { // exec only when ran
        def suiteName = findProperty("suite_name")
        if (!suiteName) {
            throw new GradleException("Suite name property 'suite_name' is missing")
        }

        useTestNG() {
            useDefaultListeners = true

            def suitePath = Paths.get(project.rootDir.toString(),
                    "e2e-tests/src/test/resources/" + suiteName + ".xml" as String)
            if (!Files.exists(suitePath)) {
                throw new GradleException("Suite [" + suitePath.toAbsolutePath() + "] doesn't exist")
            }
            suiteXmlFiles = [suitePath.toFile()]
        }

        systemProperty "allure.results.directory",
                project.layout.buildDirectory.dir("allure-results").get().getAsFile().getAbsolutePath()
    }
}

tasks.named('test') {
    enabled = runE2e
}

